{"stats":{"asserts":104,"passes":100,"failures":4},"asserts":[{"number":1,"comment":"memory » beforeEach hook for Memory() must alias a buffer from another Memory","name":"register » need more ellie processor register tests # TODO","ok":false,"extra":{}},{"number":2,"comment":"memory » beforeEach hook for Memory() must alias a buffer from another Memory","name":"No tests found in test\\ellie\\processor\\mode.test.js, make sure to import \"ava\" at the top of your test file","ok":false,"extra":{}},{"number":3,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory.Error should be accessible","ok":true,"extra":{}},{"number":4,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory.Mirror should be accessible","ok":true,"extra":{}},{"number":5,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory.Override should be accessible","ok":true,"extra":{}},{"number":6,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory(name...) must be defined","ok":true,"extra":{}},{"number":7,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory(...description...) must be defined","ok":true,"extra":{}},{"number":8,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory(...format...) must be defined","ok":true,"extra":{}},{"number":9,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory(...size...) must be defined","ok":true,"extra":{}},{"number":10,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory() must create a new buffer if not defined","ok":true,"extra":{}},{"number":11,"comment":"memory » beforeEach hook for toString() must return string #1","name":"memory » Memory() must alias a buffer from another Memory","ok":true,"extra":{}},{"number":12,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » Memory() must alias a buffer from a ArrayBuffer","ok":true,"extra":{}},{"number":13,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » Memory() must reject something any other buffer","ok":true,"extra":{}},{"number":14,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » mirror() must add a mirror to this.mirrors","ok":true,"extra":{}},{"number":15,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » mirror() must add a mirror to this.overrides","ok":true,"extra":{}},{"number":16,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » lookup() must correctly reroute mirrors","ok":true,"extra":{}},{"number":17,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » lookup() must correctly return overrides","ok":true,"extra":{}},{"number":18,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » get() must return value","ok":true,"extra":{}},{"number":19,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » get() must return override value","ok":true,"extra":{}},{"number":20,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » set() must return this","ok":true,"extra":{}},{"number":21,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » set() must set memory","ok":true,"extra":{}},{"number":22,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » set() must set via override","ok":true,"extra":{}},{"number":23,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"memory » toString() must return string #1","ok":true,"extra":{}},{"number":24,"comment":"register » beforeEach hook for alias() should alter .aliases","name":"processor » need more ellie processor tests # TODO","ok":false,"extra":{}},{"number":25,"comment":"register » beforeEach hook for toString() new Register","name":"register » Register.Error should be accessible","ok":true,"extra":{}},{"number":26,"comment":"register » beforeEach hook for toString() new Register","name":"register » Register() must have a name and size","ok":true,"extra":{}},{"number":27,"comment":"register » beforeEach hook for toString() new Register","name":"register » bit() should return 0b1111","ok":true,"extra":{}},{"number":28,"comment":"register » beforeEach hook for toString() new Register","name":"register » bit() should return 0b1000","ok":true,"extra":{}},{"number":29,"comment":"register » beforeEach hook for toString() new Register","name":"register » bit() should reject overflow","ok":true,"extra":{}},{"number":30,"comment":"register » beforeEach hook for toString() new Register","name":"register » bit() should reject underflow","ok":true,"extra":{}},{"number":31,"comment":"register » beforeEach hook for toString() new Register","name":"register » bitSet() should be chainable","ok":true,"extra":{}},{"number":32,"comment":"register » beforeEach hook for toString() new Register","name":"register » bitSet() should set a bit","ok":true,"extra":{}},{"number":33,"comment":"register » beforeEach hook for toString() new Register","name":"register » bitSet() should reject overflow","ok":true,"extra":{}},{"number":34,"comment":"register » beforeEach hook for toString() new Register","name":"register » bitSet() should reject underflow","ok":true,"extra":{}},{"number":35,"comment":"register » beforeEach hook for toString() new Register","name":"register » alias() should be chainable","ok":true,"extra":{}},{"number":36,"comment":"register » beforeEach hook for toString() new Register","name":"register » alias() should alter .aliases","ok":true,"extra":{}},{"number":37,"comment":"register » beforeEach hook for toString() new Register","name":"register » aliasLookup() should find alias string","ok":true,"extra":{}},{"number":38,"comment":"register » beforeEach hook for toString() new Register","name":"register » aliasLookup() should reject objects","ok":true,"extra":{}},{"number":39,"comment":"register » beforeEach hook for toString() new Register","name":"register » aliasLookup() should nonexistant aliases","ok":true,"extra":{}},{"number":40,"comment":"register » beforeEach hook for toString() new Register","name":"register » and() should return this.bits","ok":true,"extra":{}},{"number":41,"comment":"register » beforeEach hook for toString() new Register","name":"register » and() should copy then and, but not link, registers","ok":true,"extra":{}},{"number":42,"comment":"register » beforeEach hook for toString() new Register","name":"register » or() should return this.bits","ok":true,"extra":{}},{"number":43,"comment":"register » beforeEach hook for toString() new Register","name":"register » or() should copy then or, but not link, registers","ok":true,"extra":{}},{"number":44,"comment":"register » beforeEach hook for toString() new Register","name":"register » xor() should return this.bits","ok":true,"extra":{}},{"number":45,"comment":"register » beforeEach hook for toString() new Register","name":"register » xor() should copy then xor, but not link, registers","ok":true,"extra":{}},{"number":46,"comment":"register » beforeEach hook for toString() new Register","name":"register » inc() should increment and return this.bits","ok":true,"extra":{}},{"number":47,"comment":"register » beforeEach hook for toString() new Register","name":"register » inc() should increment by the value given","ok":true,"extra":{}},{"number":48,"comment":"register » beforeEach hook for toString() new Register","name":"register » dec() should decrement and return this.bits","ok":true,"extra":{}},{"number":49,"comment":"register » beforeEach hook for toString() new Register","name":"register » dec() should increment by the value given","ok":true,"extra":{}},{"number":50,"comment":"register » beforeEach hook for toString() new Register","name":"register » load() should be chainable","ok":true,"extra":{}},{"number":51,"comment":"register » beforeEach hook for toString() new Register","name":"register » load() should copy, but not link, registers","ok":true,"extra":{}},{"number":52,"comment":"register » beforeEach hook for toString() new Register","name":"register » set() should be chainable","ok":true,"extra":{}},{"number":53,"comment":"register » beforeEach hook for toString() new Register","name":"register » set() should return .bits #1","ok":true,"extra":{}},{"number":54,"comment":"register » beforeEach hook for toString() new Register","name":"register » set() should return .bits #2","ok":true,"extra":{}},{"number":55,"comment":"register » beforeEach hook for toString() new Register","name":"register » get() should return .bits #1","ok":true,"extra":{}},{"number":56,"comment":"register » beforeEach hook for toString() new Register","name":"register » get() should return .bits #2","ok":true,"extra":{}},{"number":57,"comment":"register » beforeEach hook for toString() new Register","name":"register » test() should return 1 on a match","ok":true,"extra":{}},{"number":58,"comment":"register » beforeEach hook for toString() new Register","name":"register » test() should return 0 without a match","ok":true,"extra":{}},{"number":59,"comment":"register » beforeEach hook for toString() new Register","name":"register » wrap() should be chainable","ok":true,"extra":{}},{"number":60,"comment":"register » beforeEach hook for toString() new Register","name":"register » wrap() should fix overflown Registers","ok":true,"extra":{}},{"number":61,"comment":"register » beforeEach hook for toString() new Register","name":"register » wrap() should fix underflown Registers","ok":true,"extra":{}},{"number":62,"comment":"register » beforeEach hook for toString() new Register","name":"register » toString() new Register","ok":true,"extra":{}},{"number":63,"comment":"register » beforeEach hook for toString() new Register","name":"processor » operation » replace t.context.Processor with Ellie # TODO","ok":false,"extra":{}},{"number":64,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » Processor.Error should be accessible","ok":true,"extra":{}},{"number":65,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addMode() should be chainable","ok":true,"extra":{}},{"number":66,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addMode() should alter this.mode","ok":true,"extra":{}},{"number":67,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addMode() should alter this.instruction","ok":true,"extra":{}},{"number":68,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addMode() should reject a repeated instruction","ok":true,"extra":{}},{"number":69,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addMode() should reject a repeated mode","ok":true,"extra":{}},{"number":70,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addMode() should accept a forced mode","ok":true,"extra":{}},{"number":71,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addMode() should alter processor.instruction after addProcessor()","ok":true,"extra":{}},{"number":72,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addMode() should alter processor.instruction during addProcessor()","ok":true,"extra":{}},{"number":73,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addProcessor() should be chainable","ok":true,"extra":{}},{"number":74,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » addProcessor() should reject a second processor","ok":true,"extra":{}},{"number":75,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » run() should be chainable","ok":true,"extra":{}},{"number":76,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » run() should reject missing instructions","ok":true,"extra":{}},{"number":77,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » run() should halt on beforeExecute()","ok":true,"extra":{}},{"number":78,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » run() should halt on execute()","ok":true,"extra":{}},{"number":79,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » run() should halt on afterExecute()","ok":true,"extra":{}},{"number":80,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » toString() returns text #1","ok":true,"extra":{}},{"number":81,"comment":"processor » operation » beforeEach hook for toString() returns text #2","name":"processor » operation » toString() returns text #2","ok":true,"extra":{}},{"number":82,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » Processor.Clock should be accessible","ok":true,"extra":{}},{"number":83,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » Processor.Error should be accessible","ok":true,"extra":{}},{"number":84,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » Processor.Mode should be accessible","ok":true,"extra":{}},{"number":85,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » Processor.Operation should be accessible","ok":true,"extra":{}},{"number":86,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addInstruction() should be chainable","ok":true,"extra":{}},{"number":87,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addInstruction() should addOperation() new Operations","ok":true,"extra":{}},{"number":88,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addInstruction() should reject a repeated instruction","ok":true,"extra":{}},{"number":89,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addMemory() should be chainable","ok":true,"extra":{}},{"number":90,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addMemory() should reject repeated operations","ok":true,"extra":{}},{"number":91,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addMemory() should accept repeat when forced","ok":true,"extra":{}},{"number":92,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addOperation() should be chainable","ok":true,"extra":{}},{"number":93,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addOperation() should assign a processor if null","ok":true,"extra":{}},{"number":94,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addOperation() should reject repeated operations","ok":true,"extra":{}},{"number":95,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addOperation() should accept repeat when forced","ok":true,"extra":{}},{"number":96,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addOperation() should not reject blank bonded operations","ok":true,"extra":{}},{"number":97,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addRegister() should be chainable","ok":true,"extra":{}},{"number":98,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addRegister() should reject repeated operations","ok":true,"extra":{}},{"number":99,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » addRegister() should accept repeat when forced","ok":true,"extra":{}},{"number":100,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » run() should reject unknown instructions","ok":true,"extra":{}},{"number":101,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » run() should allow a valid instruction","ok":true,"extra":{}},{"number":102,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » run() should reject an unknown operation","ok":true,"extra":{}},{"number":103,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » run() should allow a valid operation + mode","ok":true,"extra":{}},{"number":104,"comment":"processor » beforeEach hook for run() should reject any other parameter type","name":"processor » run() should reject any other parameter type","ok":true,"extra":{}}]}
